name: 🚀 Deploy

on:
  push:
    branches:
      - main
      - dev
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Install deps
        run: npm install

      - name: 🔬 Lint
        run: npm run lint

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Install deps
        run: npm install

      - name: 🔎 Type check
        run: npm run typecheck --if-present

  vitest:
    name: ⚡ Vitest
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Install deps
        run: npm install

      - name: ⚡ Run vitest
        run: npm run test -- --coverage

  cypress:
    name: ⚫️ Cypress
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 🏄 Copy test env vars
        run: cp .env.example .env

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Install deps
        run: npm install

      - name: Set DATABASE_URL env
        run: export DATABASE_URL="postgresql://postgres:changeme@localhost:5432/postgres"

      - name: Set SESSION_SECRET env
        run: export SESSION_SECRET="super-duper-s3cret"

      - name: 🛠 Setup Database
        run: docker compose --profile db-only up -d

      - name: Prepare Database
        run: npx prisma db push && npx prisma db seed

      - name: ⚙️ Build
        run: npm run build

      - name: 🌳 Cypress run
        uses: cypress-io/github-action@v5
        with:
          start: npm run start:mocks
          wait-on: http://localhost:8811
        env:
          PORT: 8811